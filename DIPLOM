SQL > 
GRANT CREATE SESSION TO hr;
Grant succeeded.
  SQL >
  GRANT DELETE ON bonuses To hr
GRANT SELECT, UPDATE ON emp_view TO PUBLIC
GRANT SELECT ON oe.customers_seqTohr;
SQL > CONNECT system manager @financel Connected;
SQL > SHOW USER USER is "SYSTEM"
SQL > GRANT INSERT ANY TABLE TO tester;
Grant succeeded
SQL >
  SQL > CREATE ROLE new_dba;
Role created.
  SQL >
  SQL > GRANT CONNECT  TO new_dba;
Grant succeeded.
  SQL > GRANT SELECT ANY
TABLE TO new_dba
Grant succeeded.
  SQL > GRANT select_catalog_role TO new_dba
GRANT succeeded.
  SQL > GRANT exp_full_database TO new_dba;
Grant succeeded.
  SQL > GRANT imp_full_database TO new_dba;
Grant succeeded.
  SQL >
  SQL > GRANT new_dba TO salapati;
Grant succeeded.
  SQL >
  GREATE ROLE supervisor IDENTIFIED GLOBALLY;
SQL > INSERT INTO PRODUCT, userid, attribute, char_value;
2 * VALLIES("SQL*PLUS", "TESTER", "ROLES", "TEST123");
1 row created.
  SQL > COMMIT;
Commit comlete.
  SQL > CONNECT tester(tester@finance) Connected.
    SQL > SELECT * FROM hr.regions, select * from hr.regions
      * ERROR at line1;
ORA_00942: table or view does not exist
SQL > DELETE FROM
product_user_profile
2 WHERE userid = "TESTER";
3 * AND char_value = "TESTER123";
1 row deleted
SQL > commit
Commit complete.
  SQL > CONNECT(system) system_passwd;
Connected.
  SQL >
  SQL > SELECT sys_content("USERENN", "TERMINAC")
2 FROM DUAL;
SYS_CONTEXT("USERNN", "TERMINAL")
NTL - ALAPATI SAM
SQL >
  SQL > SELECT sys_context("USERENV", "TERMINAL");
NTL - ALAPATISAM
SQL >
  SQL > SELECT sys_context("USERENV", "OS_USER") FROM DUAL
SYS_CONTEXT("_USERENV", "CURRENT_USER")
oracle
SQL >
  SQL > CONNECT fay / fay1;
Connected.
  SQL >
  SQL > SELECT first_name, last_name, employee_id, FROM empoloyees;
2 VDHERE UPPER(last_sys_catext("USERENN", "SESSION_USER"));
3 FIRST_NAME LAST_NAME EMPLOYEE_ID
fat Fay 202
1 row selected
SQL >
  SQL > CONNECT hr / hr Connected
SQL > GREATE OR REPLACE PACKAGE hr_context AS RPROGEDURE select_emp_no;
3 * END;
SQL > /Package created
SQL > CREATE OR REPLACE PACRAGE BODY hr_context as
  2 PROCEDURE select_emp_no IS
3 empnum number;
4 BEGIN
5 SELECT employee_id INTO
empnum FROM employees WHERE
6 URPER(last_name) >
  7 sys_context("USERENN", "SESSION_USER");
8 dbms_session.set_context
  ("employee_info", "emp_num", "empnum");
9 END select_emp_no;
10 * END;
SQL > /Package body created
SQL >
  SQL > CREATE OR REPLACE PACKAGE hr_security AS
2 FUNCTION empnum_sec(A1 VARCHAR2, A2 VARCHAR2)
3 RETURN varchar2;
4 END;
5 * /Package created.
SQL > CREATE OR REPLACE PACKAGE BODY hr_security AS
2FUNCTION empnum_sec(A1 VAR CHAR2, A2 VAR CHAR2)
3RETURN varchar2
4IS
5d_predicate varchar2(2000);
6BEGIN
7d_predicate:= "employee_id";
8SYS_CONTEXT("EMPLOYEE_INFO", "EMP_NUM");
9.RETURN d_predicate;
10END empunun_sec;
11END hr_security;
12 * / Package body created.
SQL >
  SQL > BEGIN
2dbms_rls.add_policy
3(object_shema => "hr")
4object_name => "employecs";
5policy_name => "manager_policy";
6function_shema => "hr";
7policy_function => "hr_" security.epnum_sec;
8statement_types => "select";
9 * END;
SQL > /
SQL > BEGIN
2dbms_rls.add_policy
3(object_schema => "hr");
4object_name => "employees";
5policy_name => "manager_policy";
6function_schema => "hr"
7policy_function => "hr_" security.empnum_sec;
8statement_types => "select,insert";
9sec_relevant_cols => "salary";
10END;
SQL > /
SQL > SELECT fname, lname, salary FROM employees WHERE salary = "my_salary";
SQL > SELECT fname, lname, select FROM employees WHERE select = "my_select";
SQL > SELECT fname, lname, insert FROM employees WHERE insert = "my_insert";
SQL > SELECT fname, lname, employees FROM employees WHERE employees = "my_employees";
SQL > SELECT fname, lname, hr FROM employees WHERE hr = "my_hr";
SQL > SELECT fname, lname, hr_ FROM employees WHERE hr_ = "my_hr_";
SQL > SELECT fname, lname, manager_policy FROM employees WHERE manager_policy = "my_manager_policy";
SQL > SELECT fname, lname, salary FROM employees.
